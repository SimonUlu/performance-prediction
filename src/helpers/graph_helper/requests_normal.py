import pandas as pd
from io import StringIO
import matplotlib.pyplot as plt
from scipy import stats
import numpy as np

data = """Timestamp,RequestsPerSecond,AverageResponseTime
18,0,0
20,5,126.0
22,5,50.0
24,7,68.57142857142857
26,4,22.25
28,8,61.75
30,8,168.75
32,14,191.0
34,15,134.6
36,13,66.3076923076923
38,20,250.6
40,13,122.76923076923077
42,18,123.55555555555556
44,18,94.88888888888889
46,17,63.05882352941177
48,21,79.71428571428571
50,9,32.333333333333336
52,23,86.56521739130434
54,21,89.23809523809524
56,13,71.23076923076923
58,18,93.0
60,25,142.4
62,29,121.17241379310344
64,15,88.4
66,14,110.0
68,24,110.0
70,26,125.5
72,15,194.6
74,14,83.14285714285714
76,14,49.285714285714285
78,22,89.72727272727273
80,20,110.0
82,22,110.0
84,15,180.0
86,15,76.0
88,29,150.24137931034483
90,20,24.65
92,18,110.0
94,27,156.96296296296296
96,21,80.80952380952381
98,19,75.52631578947368
100,26,83.07692307692308
102,14,58.0
104,25,78.44
106,26,77.57692307692308
108,27,106.0
110,17,10.823529411764707
112,16,155.5625
114,21,64.71428571428571
116,16,50.125
118,23,141.47826086956522
120,17,104.0
122,11,104.0
124,19,54.94736842105263
126,26,103.0
128,13,177.69230769230768
130,22,239.4090909090909
132,17,107.0
134,20,261.5
136,12,23.166666666666668
138,24,331.0833333333333
140,24,68.58333333333333
142,12,113.0
144,26,69.61538461538461
146,17,112.0
148,26,66.96153846153847
150,14,111.0
152,24,60.625
154,17,110.0
156,21,50.61904761904762
158,17,109.0
160,19,109.0
162,19,109.0
164,23,109.0
166,15,19.666666666666668
168,22,108.0
170,26,108.0
172,18,108.0
174,11,0
176,23,44.391304347826086
178,21,106.0
180,19,106.0
182,17,194.05882352941177
184,29,264.86206896551727
186,23,110.0
188,14,110.0
190,20,30.85
192,18,109.0
194,19,23.736842105263158
196,25,108.0
198,24,38.458333333333336
200,0,0
202,0,0
204,0,0
206,0,0
208,0,0
210,0,0
212,0,0
214,0,0
216,0,0
218,0,0
220,0,0
222,0,0
224,0,0
226,0,0
228,0,0
230,0,0
232,0,0
234,0,0
236,0,0
238,0,0
242,17,81.88235294117646
244,21,179.71428571428572
246,22,68.13636363636364
248,29,107.0
250,35,118.22857142857143
252,31,104.7741935483871
254,41,158.5121951219512
256,49,144.71428571428572
258,46,117.52173913043478
260,59,123.0
262,49,139.57142857142858
264,67,132.0597014925373
266,79,160.9367088607595
268,72,165.66666666666666
270,75,200.24
272,64,189.6875
274,92,257.5217391304348
276,93,219.16129032258064
278,90,337.0
280,91,315.4725274725275
282,110,223.79090909090908
284,112,361.875
286,110,299.9727272727273
288,128,338.140625
290,96,381.96875
292,120,458.625
294,140,511.9642857142857
296,131,552.2519083969465
298,131,672.4885496183206
300,144,716.1597222222222
302,142,631.4577464788732
304,141,723.6170212765958
306,154,750.1818181818181
308,137,753.956204379562
310,149,696.8322147651006
312,141,581.6099290780141
314,141,548.0070921985815
316,139,610.0071942446043
318,148,613.3040540540541
320,135,783.8222222222222
322,142,874.0845070422536
324,137,919.1970802919708
326,123,795.8536585365854
328,162,767.0246913580247
330,140,701.0857142857143
332,138,715.8695652173913
334,103,429.29126213592235
336,143,859.2797202797203
338,164,713.0243902439024
340,120,535.0
342,141,760.1489361702128
344,136,780.4264705882352
346,153,802.2941176470588
348,145,593.4827586206897
350,123,650.089430894309
352,160,1045.15
354,155,768.8064516129032
356,117,575.0
358,140,850.1428571428571
360,135,1066.5555555555557
362,142,1062.619718309859
364,162,897.3765432098766
366,124,551.6854838709677
368,112,733.6964285714286
370,150,850.5
372,150,860.5
374,144,723.7083333333334
376,139,676.2374100719425
378,135,564.1259259259259
380,148,728.581081081081
382,142,737.1267605633802
384,137,625.0
386,31,625.0
"""

# Daten einlesen
df = pd.read_csv(StringIO(data))

# Scatterplot
plt.scatter(df["RequestsPerSecond"], df["AverageResponseTime"])
plt.style.use('seaborn-v0_8-whitegrid')

# Regressionslinie
slope, intercept, r_value, p_value, std_err = stats.linregress(df["RequestsPerSecond"], df["AverageResponseTime"])
line = slope * df["RequestsPerSecond"] + intercept
plt.plot(df["RequestsPerSecond"], line, 'r', label='fit: %0.2f x + %0.2f' % (slope,intercept))

# Beschriftungen
plt.xlabel('Requests per Second')
plt.ylabel('Average Response Time')
plt.title('Requests vs Response Time')
plt.legend()

plt.savefig("rolling_average.pdf", format='pdf')
plt.show()