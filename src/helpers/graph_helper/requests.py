import pandas as pd
from io import StringIO
import matplotlib.pyplot as plt
from scipy import stats
import numpy as np

# Ersetzen Sie diesen String durch Ihre umgewandelten Daten
data = """Timestamp,RequestsPerSecond,AverageResponseTime
36,19,394.0
38,54,623.8148148148148
40,27,1301.037037037037
42,110,1461.7272727272727
44,110,1367.5454545454545
46,84,1143.6666666666667
48,99,1918.4747474747476
50,113,2521.9380530973453
52,122,2493.622950819672
54,137,3122.4963503649633
56,150,3168.8333333333335
58,103,3799.5242718446602
60,113,3826.4867256637167
62,131,4660.755725190839
64,140,5010.8
66,86,5743.697674418605
68,155,6812.36129032258
70,95,6333.7052631578945
72,187,7279.058823529412
74,207,7988.241545893719
76,160,8306.4
78,99,7450.727272727273
80,135,7599.466666666666
82,153,8611.26797385621
84,130,8501.253846153846
86,302,7618.076158940397
88,124,8630.072580645161
90,113,7323.1061946902655
92,152,7755.75
94,121,7335.909090909091
96,533,5799.0
98,258,5883.271317829457
100,1,1195.0
102,2,0
104,2,0
106,2,1182.0
108,3,1177.0
110,3,4194.333333333333
112,2,5705.0
114,2,3435.5
116,2,14786.0
118,2,14794.0
120,1,14800.0
122,1,14804.0
124,3,10264.0
126,11,9863.545454545454
128,26,8374.192307692309
130,60,30207.666666666668
132,128,26084.2265625
134,97,26478.649484536083
136,119,30596.420168067227
138,74,31571.04054054054
140,143,34701.51748251748
142,147,32385.557823129253
144,179,29877.748603351956
146,141,21910.510638297874
148,160,19372.0625
150,206,13791.339805825242
152,219,15106.328767123288
154,99,10455.939393939394
156,80,6748.875
"""

# Daten einlesen
df = pd.read_csv(StringIO(data))

# Scatterplot
plt.scatter(df["RequestsPerSecond"], df["AverageResponseTime"])
plt.style.use('seaborn-v0_8-whitegrid')

# Regressionslinie
slope, intercept, r_value, p_value, std_err = stats.linregress(df["RequestsPerSecond"], df["AverageResponseTime"])
line = slope * df["RequestsPerSecond"] + intercept
plt.plot(df["RequestsPerSecond"], line, 'r', label='fit: %0.2f x + %0.2f' % (slope,intercept))

# Beschriftungen
plt.xlabel('Requests per Second')
plt.ylabel('Average Response Time')
plt.title('Requests vs Response Time')
plt.legend()

plt.savefig("rolling_average.pdf", format='pdf')
plt.show()